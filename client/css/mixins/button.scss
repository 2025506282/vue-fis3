// mixins for button
// ------------------------
@mixin button-size($padding; $font-size; $border-radius) {
  padding: $padding;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin button-variant($color; $background; $border) {
  @include button-color($color; $background; $border);

  &:hover {
    @include button-color(tint($color, 20%); tint($background, 20%); tint($border, 20%));
  }
  &:active,
  &.active {
    @include button-color(shade($color, 5%); shade($background, 5%); shade($background, 5%));
  }
  &:active,
  &.active {
    background-image: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:active,
    &.active {
      @include button-color($btn-disable-color; $btn-disable-bg; $btn-disable-border);
    }
  }
}

@mixin button-color($color; $background; $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
}

@mixin button-group-base($btnClassName) {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  > .${btnClassName} {
    position: relative;
    float: left;
    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index: 2;
    }
  }

  // size
  &-lg > .${btnClassName} {
    @include button-size($btn-padding-lg; $btn-font-size-lg; $btn-border-radius-lg);
  }

  &-sm > .${btnClassName} {
    @include button-size($btn-padding-sm; $font-size-base; $btn-border-radius-sm);
    > .${iconfont-css-prefix} {
      font-size: $font-size-base;
    }
  }
}

// Base styles of buttons
// --------------------------------------------------
@mixin btn() {
  display: inline-block;
  margin-bottom: 0;
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: 1px solid transparent;
  // outline: none;
  white-space: nowrap;
  line-height: $line-height-base;
  @include button-size($btn-padding-base; $font-size-base; $btn-border-radius-base);
  @include user-select(none);
  @include transition(all .3s $ease-in-out);
  transform: translate3d(0, 0, 0);

  > .${iconfont-css-prefix} {
    line-height: 1;
    position: relative;
    top: -1px;
  }

  &,
  &:active,
  &:focus {
    outline: 0;
  }

  &:not([disabled]):hover {
    text-decoration: none;
  }

  &:not([disabled]):active {
    outline: 0;
    @include transition(none);
  }

  &.disabled,
  &[disabled]{
    cursor: $cursor-disabled;
  }

  &-lg {
    @include button-size($btn-padding-lg; $btn-font-size-lg; $btn-border-radius-lg);
  }

  &-sm {
    @include button-size($btn-padding-sm; $font-size-base; $btn-border-radius-sm);
  }
}

// primary button style
@mixin btn-primary() {
  @include button-variant($btn-primary-color; $btn-primary-bg; $primary-color);

  &:hover,
  &:active,
  &.active {
    color: $btn-primary-color;
  }
}

// default button style
@mixin btn-default() {
  @include button-variant($btn-default-color; $btn-default-bg; $btn-default-border);

  &:hover {
    @include button-color(tint($primary-color, 20%); white; tint($primary-color, 20%));
  }
  &:active,
  &.active {
    @include button-color(shade($primary-color, 5%); white; shade($primary-color, 5%));
  }
}

// ghost button style
@mixin btn-ghost() {
  @include button-variant($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);

  &:hover {
    @include button-color(tint($primary-color, 20%); white; tint($primary-color, 20%));
  }
  &:active,
  &.active {
    @include button-color(shade($primary-color, 5%); white; shade($primary-color, 5%));
  }
}

// circle button: the content only contains icon
@mixin btn-circle($btnClassName: btn) {
  @include square($btn-circle-size);
  @include button-size(0; $font-size-base + 2; 50%);

  > .${iconfont-css-prefix} {
    top: -1px;
  }

  &.${btnClassName}-lg {
    @include square($btn-circle-size-lg);
    @include button-size(0; $btn-font-size-lg + 2; 50%);
  }

  &.${btnClassName}-sm {
    @include square($btn-circle-size-sm);
    @include button-size(0; $font-size-base; 50%);
  }
}

// circle button with stroke border
@mixin btn-circle-outline() {
  position: relative;

  &:not([disabled]):before {
    position: absolute;
    top: 0;
    left: 0;
    display: inline-block;
    @include opacity(0);
    width: 100%;
    height: 100%;
    border-radius: 50% 50%;
    content: " ";
    @include scale(0, 0);
    @include transition(all .3s $ease-in-out);
    z-index: 0;
    background-color: $primary-color;
  }

  &:not([disabled]):hover,
  &:not([disabled]):active,
  &:not([disabled]).active {
    > .${iconfont-css-prefix} {
      color: $btn-primary-color;
    }
  }

  &:not([disabled]):hover:before,
  &:not([disabled]):active:before,
  &:not([disabled]).active:before {
    @include opacity(1);
    @include scale(1, 1);
  }

  &:not([disabled]):active:before,
  &:not([disabled]).active:before {
    background-color: tint($primary-color, 20%);
  }
}

// Horizontal button groups styl
// --------------------------------------------------
@mixin btn-group($btnClassName: btn) {
  @include button-group-base($btnClassName);

  .${btnClassName} + .${btnClassName},
  .${btnClassName} + &,
  & + .${btnClassName},
  & + & {
    margin-left: -1px;
  }

  .${btnClassName}:not(:first-child):not(:last-child) {
    border-radius: 0;
    padding-left: 8px;
    padding-right: 8px;
  }

  > .${btnClassName}:first-child {
    margin-left: 0;
    &:not(:last-child) {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
      padding-right: 8px;
    }
  }

  > .${btnClassName}:last-child:not(:first-child) {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    padding-left: 8px;
  }

  > & {
    float: left;
  }

  > &:not(:first-child):not(:last-child) > .${btnClassName} {
    border-radius: 0;
  }

  > &:first-child:not(:last-child) {
    > .${btnClassName}:last-child {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
      padding-right: 8px;
    }
  }

  > &:last-child:not(:first-child) > .${btnClassName}:first-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    padding-left: 8px;
  }
}
